@page "/"
@using System.Diagnostics

<div class ="container">
	<div class = "row justify-content-center">
		
		<div class ="col-3 text-left">
			<input class="form-check-input" type ="checkbox" id ="flaming" 
			@onchange ="UpdateFlaming"/>
			<label class ="form-check-label" for ="flaming">
			Flaming
			</label>
		</div>

		<div class = "col-3 text-right">
			<input class = "form-check-input" type = "checkbox" id = "magic"
			@onchange="UpdateMagic"/>
			<label class = form-check-label for="magic">
				Magic
			</label>
		</div>

		<div class = "row justify-content-center mt-5">
			<div class = "col-4 text-center">
				<button type ="button" class = "btn btn-primary" @onclick="RollDice">
					Roll for Damage
				</button>
			</div>
		</div>

		<div class ="row justify-content-center mt-5">
			<div class = "col-6 text-center">
				<h3>@damageText</h3>
			</div>
		</div>

	</div>

</div>


@code{


	Random random =new Random();
	SwordDamage swordDamage = new SwordDamage();

	string damageText = "";

	private void UpdateFlaming(ChangeEventArgs e)
	{ 
		swordDamage.SetFlaming((bool)e.Value);
		DisplayDamage();
	}
	private void UpdateMagic(ChangeEventArgs e)
	{ 
		swordDamage.SetMagic((bool)e.Value);
		DisplayDamage();
	}
	protected override void OnInitialized()
	{
		swordDamage.SetMagic(false);
		swordDamage.SetFlaming(false);
		RollDice();

	}
	public void RollDice()
	{
		swordDamage.Roll = random.Next(1,7) + random.Next(1,7) + random.Next(1, 7);
		swordDamage.CalculateDamage();
		DisplayDamage();
	}
	
	void DisplayDamage()
	{
		damageText = "Rolled " + swordDamage.Roll + " for " + swordDamage.Damage + " HP";
		Debug.WriteLine($"Calculate Damge - Finished {swordDamage.Damage} (roll:{swordDamage.Roll})");
	}


	
	









}
